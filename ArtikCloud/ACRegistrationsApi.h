#import <Foundation/Foundation.h>
#import "ACDeviceRegConfirmUserResponseEnvelope.h"
#import "ACDeviceRegConfirmUserRequest.h"
#import "ACDeviceRegStatusResponseEnvelope.h"
#import "ACUnregisterDeviceResponseEnvelope.h"
#import "ACObject.h"
#import "ACApiClient.h"


/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */

@interface ACRegistrationsApi: NSObject

@property(nonatomic, assign)ACApiClient *apiClient;

-(instancetype) initWithApiClient:(ACApiClient *)apiClient;
-(void) addHeader:(NSString*)value forKey:(NSString*)key;
-(unsigned long) requestQueueSize;
+(ACRegistrationsApi*) apiWithHeader:(NSString*)headerValue key:(NSString*)key;
+(ACRegistrationsApi*) sharedAPI;
///
///
/// Confirm User
/// This call updates the registration request issued earlier by associating it with an authenticated user and captures all additional information required to add a new device.
///
/// @param registrationInfo Device Registration information.
/// 
///
/// @return ACDeviceRegConfirmUserResponseEnvelope*
-(NSNumber*) confirmUserWithRegistrationInfo: (ACDeviceRegConfirmUserRequest*) registrationInfo
    completionHandler: (void (^)(ACDeviceRegConfirmUserResponseEnvelope* output, NSError* error)) handler;


///
///
/// Get Request Status For User
/// This call checks the status of the request so users can poll and know when registration is complete.
///
/// @param requestId Request ID.
/// 
///
/// @return ACDeviceRegStatusResponseEnvelope*
-(NSNumber*) getRequestStatusForUserWithRequestId: (NSString*) requestId
    completionHandler: (void (^)(ACDeviceRegStatusResponseEnvelope* output, NSError* error)) handler;


///
///
/// Unregister Device
/// This call clears any associations from the secure device registration.
///
/// @param deviceId Device ID.
/// 
///
/// @return ACUnregisterDeviceResponseEnvelope*
-(NSNumber*) unregisterDeviceWithDeviceId: (NSString*) deviceId
    completionHandler: (void (^)(ACUnregisterDeviceResponseEnvelope* output, NSError* error)) handler;



@end

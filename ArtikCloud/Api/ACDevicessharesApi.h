#import <Foundation/Foundation.h>
#import "ACDeviceShareInfo.h"
#import "ACDeviceSharingDataResponseBody.h"
#import "ACDeviceSharingEnvelope.h"
#import "ACDeviceSharingIdResponseBody.h"
#import "ACApi.h"

/**
* ARTIK Cloud API
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
*
* OpenAPI spec version: 2.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface ACDevicesSharesApi: NSObject <ACApi>

extern NSString* kACDevicesSharesApiErrorDomain;
extern NSInteger kACDevicesSharesApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(ACApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Share a device 
/// Share a device 
///
/// @param deviceId Device ID.
/// @param deviceShareInfo Device object that needs to be added
/// 
///  code:0 message:"success"
///
/// @return ACDeviceSharingIdResponseBody*
-(NSURLSessionTask*) createShareForDeviceWithDeviceId: (NSString*) deviceId
    deviceShareInfo: (ACDeviceShareInfo*) deviceShareInfo
    completionHandler: (void (^)(ACDeviceSharingIdResponseBody* output, NSError* error)) handler;


/// Delete specific share of the given device id
/// Delete specific share of the given device id
///
/// @param deviceId Device ID.
/// @param shareId Share ID.
/// 
///  code:0 message:"success"
///
/// @return ACDeviceSharingIdResponseBody*
-(NSURLSessionTask*) deleteSharingForDeviceWithDeviceId: (NSString*) deviceId
    shareId: (NSString*) shareId
    completionHandler: (void (^)(ACDeviceSharingIdResponseBody* output, NSError* error)) handler;


/// List all shares for the given device id
/// List all shares for the given device id
///
/// @param deviceId Device ID.
/// @param count Desired count of items in the result set. (optional)
/// @param offset Offset for pagination. (optional)
/// 
///  code:0 message:"success"
///
/// @return ACDeviceSharingEnvelope*
-(NSURLSessionTask*) getAllSharesForDeviceWithDeviceId: (NSString*) deviceId
    count: (NSNumber*) count
    offset: (NSNumber*) offset
    completionHandler: (void (^)(ACDeviceSharingEnvelope* output, NSError* error)) handler;


/// Get specific share of the given device id
/// Get specific share of the given device id
///
/// @param deviceId Device ID.
/// @param shareId Share ID.
/// 
///  code:0 message:"success"
///
/// @return ACDeviceSharingDataResponseBody*
-(NSURLSessionTask*) getSharingForDeviceWithDeviceId: (NSString*) deviceId
    shareId: (NSString*) shareId
    completionHandler: (void (^)(ACDeviceSharingDataResponseBody* output, NSError* error)) handler;



@end

#import <Foundation/Foundation.h>
#import "ACExportHistoryResponse.h"
#import "ACExportRequestInfo.h"
#import "ACExportRequestResponse.h"
#import "ACExportStatusResponse.h"
#import "ACApi.h"

/**
* ARTIK Cloud API
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
*
* OpenAPI spec version: 2.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface ACExportApi: NSObject <ACApi>

extern NSString* kACExportApiErrorDomain;
extern NSInteger kACExportApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(ACApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create Export Request
/// Export normalized messages. The following input combinations are supported:<br/><table><tr><th>Combination</th><th>Parameters</th><th>Description</th></tr><tr><td>Get by users</td><td>uids</td><td>Search by a list of User IDs. For each user in the list, the current authenticated user must have read access over the specified user.</td></tr><tr><td>Get by devices</td><td>sdids</td><td>Search by Source Device IDs.</td></tr><tr><td>Get by device types</td><td>uids,sdtids</td><td>Search by list of Source Device Type IDs for the given list of users.</td></tr><tr><td>Get by trial</td><td>trialId</td><td>Search by Trial ID.</td></tr><tr><td>Get by combination of parameters</td><td>uids,sdids,sdtids</td><td>Search by list of Source Device IDs. Each Device ID must belong to a Source Device Type ID and a User ID.</td></tr><tr><td>Common</td><td>startDate,endDate,order,format,url,csvHeaders</td><td>Parameters that can be used with the above combinations.</td></tr></table>
///
/// @param exportRequestInfo ExportRequest object that is passed in the body
/// 
///  code:0 message:"success"
///
/// @return ACExportRequestResponse*
-(NSURLSessionTask*) exportRequestWithExportRequestInfo: (ACExportRequestInfo*) exportRequestInfo
    completionHandler: (void (^)(ACExportRequestResponse* output, NSError* error)) handler;


/// Get Export History
/// Get the history of export requests.
///
/// @param trialId Filter by trialId. (optional)
/// @param count Pagination count. (optional)
/// @param offset Pagination offset. (optional)
/// 
///  code:0 message:"success"
///
/// @return ACExportHistoryResponse*
-(NSURLSessionTask*) getExportHistoryWithTrialId: (NSString*) trialId
    count: (NSNumber*) count
    offset: (NSNumber*) offset
    completionHandler: (void (^)(ACExportHistoryResponse* output, NSError* error)) handler;


/// Get Export Result
/// Retrieve result of the export query in tgz format. The tar file may contain one or more files with the results.
///
/// @param exportId Export ID of the export query.
/// 
///  code:0 message:"success"
///
/// @return NSString*
-(NSURLSessionTask*) getExportResultWithExportId: (NSString*) exportId
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Check Export Status
/// Check status of the export query.
///
/// @param exportId Export ID of the export query.
/// 
///  code:0 message:"success"
///
/// @return ACExportStatusResponse*
-(NSURLSessionTask*) getExportStatusWithExportId: (NSString*) exportId
    completionHandler: (void (^)(ACExportStatusResponse* output, NSError* error)) handler;



@end

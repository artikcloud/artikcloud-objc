#import <Foundation/Foundation.h>
#import "ACDevicePricingTierEnvelope.h"
#import "ACDevicePricingTierRequest.h"
#import "ACDevicePricingTiersEnvelope.h"
#import "ACDeviceTypePricingTier.h"
#import "ACDeviceTypePricingTiersEnvelope.h"
#import "ACUpgradePathEnvelope.h"
#import "ACApi.h"

/**
* ARTIK Cloud API
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
*
* OpenAPI spec version: 2.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface ACMonetizationApi: NSObject <ACApi>

extern NSString* kACMonetizationApiErrorDomain;
extern NSInteger kACMonetizationApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(ACApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Define devicetype's pricing tiers.
/// Define devicetype's pricing tiers.
///
/// @param dtid DeviceType ID
/// @param pricingTierInfo Pricing tier info
/// 
///  code:0 message:"success"
///
/// @return ACDeviceTypePricingTier*
-(NSURLSessionTask*) createPricingTiersWithDtid: (NSString*) dtid
    pricingTierInfo: (ACDeviceTypePricingTier*) pricingTierInfo
    completionHandler: (void (^)(ACDeviceTypePricingTier* output, NSError* error)) handler;


/// Get a device's pricing tiers
/// Get a device's pricing tiers
///
/// @param did Device ID
/// @param active Filter by active (optional)
/// 
///  code:0 message:"success"
///
/// @return ACDevicePricingTiersEnvelope*
-(NSURLSessionTask*) getPricingTiersWithDid: (NSString*) did
    active: (NSNumber*) active
    completionHandler: (void (^)(ACDevicePricingTiersEnvelope* output, NSError* error)) handler;


/// Get devicetype's pricing tiers.
/// Get devicetype's pricing tiers.
///
/// @param dtid DeviceType ID
/// @param version Version
/// 
///  code:0 message:"success"
///
/// @return ACDeviceTypePricingTiersEnvelope*
-(NSURLSessionTask*) getThePricingTiersWithDtid: (NSString*) dtid
    version: (NSNumber*) version
    completionHandler: (void (^)(ACDeviceTypePricingTiersEnvelope* output, NSError* error)) handler;


/// Get upgrade path
/// Get upgrade path
///
/// @param did Device ID
/// @param action Action to perform
/// 
///  code:0 message:"success"
///
/// @return ACUpgradePathEnvelope*
-(NSURLSessionTask*) getUpgradePathWithDid: (NSString*) did
    action: (NSString*) action
    completionHandler: (void (^)(ACUpgradePathEnvelope* output, NSError* error)) handler;


/// Set a device's pricing tier
/// Set a device's pricing tier
///
/// @param did Device ID
/// @param pricingTier Pricing tier
/// 
///  code:0 message:"success"
///
/// @return ACDevicePricingTierEnvelope*
-(NSURLSessionTask*) setPricingTierWithDid: (NSString*) did
    pricingTier: (ACDevicePricingTierRequest*) pricingTier
    completionHandler: (void (^)(ACDevicePricingTierEnvelope* output, NSError* error)) handler;



@end

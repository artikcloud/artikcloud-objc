#import <Foundation/Foundation.h>
#import "ACDeviceRegConfirmUserRequest.h"
#import "ACDeviceRegConfirmUserResponseEnvelope.h"
#import "ACDeviceRegStatusResponseEnvelope.h"
#import "ACUnregisterDeviceResponseEnvelope.h"
#import "ACApi.h"

/**
* ARTIK Cloud API
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
*
* OpenAPI spec version: 2.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface ACRegistrationsApi: NSObject <ACApi>

extern NSString* kACRegistrationsApiErrorDomain;
extern NSInteger kACRegistrationsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(ACApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Confirm User
/// This call updates the registration request issued earlier by associating it with an authenticated user and captures all additional information required to add a new device.
///
/// @param registrationInfo Device Registration information.
/// 
///  code:0 message:"success"
///
/// @return ACDeviceRegConfirmUserResponseEnvelope*
-(NSURLSessionTask*) confirmUserWithRegistrationInfo: (ACDeviceRegConfirmUserRequest*) registrationInfo
    completionHandler: (void (^)(ACDeviceRegConfirmUserResponseEnvelope* output, NSError* error)) handler;


/// Get Request Status For User
/// This call checks the status of the request so users can poll and know when registration is complete.
///
/// @param requestId Request ID.
/// 
///  code:0 message:"success"
///
/// @return ACDeviceRegStatusResponseEnvelope*
-(NSURLSessionTask*) getRequestStatusForUserWithRequestId: (NSString*) requestId
    completionHandler: (void (^)(ACDeviceRegStatusResponseEnvelope* output, NSError* error)) handler;


/// Unregister Device
/// This call clears any associations from the secure device registration.
///
/// @param deviceId Device ID.
/// 
///  code:0 message:"success"
///
/// @return ACUnregisterDeviceResponseEnvelope*
-(NSURLSessionTask*) unregisterDeviceWithDeviceId: (NSString*) deviceId
    completionHandler: (void (^)(ACUnregisterDeviceResponseEnvelope* output, NSError* error)) handler;



@end

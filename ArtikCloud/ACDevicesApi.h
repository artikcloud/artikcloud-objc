#import <Foundation/Foundation.h>
#import "ACDevice.h"
#import "ACDeviceEnvelope.h"
#import "ACDeviceTokenEnvelope.h"
#import "ACObject.h"
#import "ACApiClient.h"


/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */

@interface ACDevicesApi: NSObject

@property(nonatomic, assign)ACApiClient *apiClient;

-(instancetype) initWithApiClient:(ACApiClient *)apiClient;
-(void) addHeader:(NSString*)value forKey:(NSString*)key;
-(unsigned long) requestQueueSize;
+(ACDevicesApi*) apiWithHeader:(NSString*)headerValue key:(NSString*)key;
+(ACDevicesApi*) sharedAPI;
///
///
/// Add Device
/// Create a device
///
/// @param device Device to be added to the user
/// 
///
/// @return ACDeviceEnvelope*
-(NSNumber*) addDeviceWithDevice: (ACDevice*) device
    completionHandler: (void (^)(ACDeviceEnvelope* output, NSError* error)) handler;


///
///
/// Delete Device
/// Deletes a device
///
/// @param deviceId deviceId
/// 
///
/// @return ACDeviceEnvelope*
-(NSNumber*) deleteDeviceWithDeviceId: (NSString*) deviceId
    completionHandler: (void (^)(ACDeviceEnvelope* output, NSError* error)) handler;


///
///
/// Delete Device Token
/// Deletes a device's token
///
/// @param deviceId deviceId
/// 
///
/// @return ACDeviceTokenEnvelope*
-(NSNumber*) deleteDeviceTokenWithDeviceId: (NSString*) deviceId
    completionHandler: (void (^)(ACDeviceTokenEnvelope* output, NSError* error)) handler;


///
///
/// Get Device
/// Retrieves a device
///
/// @param deviceId deviceId
/// 
///
/// @return ACDeviceEnvelope*
-(NSNumber*) getDeviceWithDeviceId: (NSString*) deviceId
    completionHandler: (void (^)(ACDeviceEnvelope* output, NSError* error)) handler;


///
///
/// Get Device Token
/// Retrieves a device's token
///
/// @param deviceId deviceId
/// 
///
/// @return ACDeviceTokenEnvelope*
-(NSNumber*) getDeviceTokenWithDeviceId: (NSString*) deviceId
    completionHandler: (void (^)(ACDeviceTokenEnvelope* output, NSError* error)) handler;


///
///
/// Update Device
/// Updates a device
///
/// @param deviceId deviceId
/// @param device Device to be updated
/// 
///
/// @return ACDeviceEnvelope*
-(NSNumber*) updateDeviceWithDeviceId: (NSString*) deviceId
    device: (ACDevice*) device
    completionHandler: (void (^)(ACDeviceEnvelope* output, NSError* error)) handler;


///
///
/// Update Device Token
/// Updates a device's token
///
/// @param deviceId deviceId
/// 
///
/// @return ACDeviceTokenEnvelope*
-(NSNumber*) updateDeviceTokenWithDeviceId: (NSString*) deviceId
    completionHandler: (void (^)(ACDeviceTokenEnvelope* output, NSError* error)) handler;



@end
